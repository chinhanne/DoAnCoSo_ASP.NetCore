@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager


@if (SignInManager.IsSignedIn(User))
{

    var userId = UserManager.GetUserId(User);
    var users = await UserManager.FindByIdAsync(userId);

    if(await UserManager.IsInRoleAsync(users, "Admin"))
    {
        
            <a class="nav-link" @*asp-area="Identity" asp-page="/Account/Manage/Index"*@ title="Manage">Hello Admin</a>

            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link" style="color: red !important">Logout</button>
            </form>
       
       
    }
    else
    {
        <a class="nav-link text-dark" @*asp-area="Identity" asp-page="/Account/Manage/Index"*@ title="Manage">Hello User @User.Identity?.Name!</a>

        <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
        </form>
    }

}
else
{
    <li class="header_navbar-item">
        <a class="header_navbar-link">
            <i class="fa-solid fa-user"></i>
            <a class="header_navbar-link" asp-area="Identity" asp-page="/Account/Register">
                Đăng ký
            </a>
        </a>
    </li>

    <li class="header_navbar-item">
        <a class="header_navbar-link">
            <i class="fa-solid fa-right-to-bracket"></i>
            <a class="header_navbar-link" asp-area="Identity" asp-page="/Account/Login">
                Đăng nhập
            </a>
        </a>
    </li>
  
}

